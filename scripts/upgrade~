#!/bin/bash

# causes the shell to exit if any subcommand or pipeline returns a non-zero status
set -e

app='Zarafa WebApp'
appname=`echo -n zc;echo 'p'`
sources=`echo -n $appname;echo '-7.2.1-51838-ubuntu-14.04-x86_64-supported'`

# Retrieve arguments
domain=$(sudo yunohost app setting $app domain)
path=$(sudo yunohost app setting $app path)

# Remove trailing "/" for next commands
path=${path%/}

# Use 'zarafa' as database name and user \
db_user=zarafa

# Copy source files
final_path=/var/www/$app
sudo mkdir -p $final_path
sudo mkdir -p $data_path
old_pwd=$(pwd)
sudo chmod -R u=rwX,g=rwX,o=rX $final_path
sudo chmod -R u=rwX,g=rwX,o= $data_path
cd $final_path
sudo mkdir -p old_apps
sudo rm -Rf old_apps/*
sudo mv apps/* old_apps \
    || echo "No app to backup"
shopt -s extglob
sudo rm -Rf !(old_apps|data|config|themes)
shopt -u extglob
cd $old_pwd
sudo cp -a ../tmp/$appname/. $final_path/
cd $final_path/old_apps
sudo rm -Rf $(ls $final_path/apps)
cd $old_pwd
sudo cp -a $final_path/old_apps/* $final_path/apps/ \
    || echo "No app to restore"

# Set permissions to app files
# you may need to make some file and/or directory writeable by www-data (nginx user)
sudo chown -R root:root $final_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@YNH_WWW_PATH@$path@g" ../conf/nginx.conf
sed -i "s@YNH_WWW_ALIAS@$final_path/@g" ../conf/nginx.conf
# If a dedicated php-fpm process is used :
#
#sudo sed -i "s@YNH_WWW_APP@$app@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [ "$is_public" = "Yes" ];
then
  # See install script
  sudo yunohost app setting $app unprotected_uris -v "/"
  # Remove old settings
  sudo yunohost app setting $app skipped_uris -d
fi

# Restart services
sudo service nginx reload
sudo yunohost app ssowatconf

